[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://Assets/Materials/CRT_pattern_8x8.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeExpression" id=15]
size = Vector2( 409.584, 237.446 )
expression = "red = mod(x/freq, 1.0);
green = mod(y/(freq * 0.4), 1.0);"

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarConstant" id=17]
constant = 1.6

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeVectorOp" id=21]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.6, 0.6, 0.6 ) ]

[sub_resource type="VisualShaderNodeScalarConstant" id=23]
constant = 0.5

[sub_resource type="VisualShaderNodeScalarConstant" id=24]
constant = 2.0

[sub_resource type="VisualShaderNodeScalarConstant" id=25]
constant = 0.4

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=14]
source = 5

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=19]
input_name = "fragcoord"

[sub_resource type="VisualShaderNodeVectorDecompose" id=20]

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_5;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// Scalar:29
	float n_out29p0 = 0.400000;

// Input:2

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 SCREEN_TEXTURE_tex_read = textureLod(SCREEN_TEXTURE, n_out3p0.xy, n_out29p0);
		n_out4p0 = SCREEN_TEXTURE_tex_read.rgb;
		n_out4p1 = SCREEN_TEXTURE_tex_read.a;
	}

// Input:8
	vec3 n_out8p0 = FRAGCOORD.xyz;

// VectorDecompose:9
	float n_out9p0 = n_out8p0.x;
	float n_out9p1 = n_out8p0.y;
	float n_out9p2 = n_out8p0.z;

// Scalar:16
	float n_out16p0 = 1.600000;

// Expression:14
	float n_out14p0;
	float n_out14p1;
	n_out14p0 = 0.0;
	n_out14p1 = 0.0;
	{
		n_out14p0 = mod(n_out9p0/n_out16p0, 1.0);
		n_out14p1 = mod(n_out9p1/(n_out16p0 * 0.4), 1.0);
	}

// VectorCompose:15
	float n_in15p2 = 0.00000;
	vec3 n_out15p0 = vec3(n_out14p0, n_out14p1, n_in15p2);

// Scalar:28
	float n_out28p0 = 2.000000;

// Texture:5
	vec4 tex_frg_5_read = textureLod(tex_frg_5, n_out15p0.xy, n_out28p0);
	vec3 n_out5p0 = tex_frg_5_read.rgb;
	float n_out5p1 = tex_frg_5_read.a;

// Scalar:27
	float n_out27p0 = 0.500000;

// VectorOp:26
	vec3 n_out26p0 = n_out5p0 + vec3(n_out27p0);

// VectorOp:23
	vec3 n_out23p0 = n_out4p0 * n_out26p0;

// Output:0
	COLOR.rgb = n_out23p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -328.971, 85.8369 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 920, 140 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( -180, 200 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( -100, 100 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( 140, 140 )
nodes/fragment/5/node = SubResource( 18 )
nodes/fragment/5/position = Vector2( 160, 280 )
nodes/fragment/8/node = SubResource( 19 )
nodes/fragment/8/position = Vector2( -980, 280 )
nodes/fragment/9/node = SubResource( 20 )
nodes/fragment/9/position = Vector2( -780, 280 )
nodes/fragment/14/node = SubResource( 15 )
nodes/fragment/14/position = Vector2( -560, 280 )
nodes/fragment/14/size = Vector2( 409.584, 237.446 )
nodes/fragment/14/input_ports = "0,0,x;1,0,y;2,0,freq;"
nodes/fragment/14/output_ports = "0,0,red;1,0,green;"
nodes/fragment/14/expression = "red = mod(x/freq, 1.0);
green = mod(y/(freq * 0.4), 1.0);"
nodes/fragment/15/node = SubResource( 16 )
nodes/fragment/15/position = Vector2( -40, 280 )
nodes/fragment/16/node = SubResource( 17 )
nodes/fragment/16/position = Vector2( -980, 360 )
nodes/fragment/23/node = SubResource( 21 )
nodes/fragment/23/position = Vector2( 380, 200 )
nodes/fragment/26/node = SubResource( 22 )
nodes/fragment/26/position = Vector2( 340, 340 )
nodes/fragment/27/node = SubResource( 23 )
nodes/fragment/27/position = Vector2( 140, 520 )
nodes/fragment/28/node = SubResource( 24 )
nodes/fragment/28/position = Vector2( -160, 540 )
nodes/fragment/29/node = SubResource( 25 )
nodes/fragment/29/position = Vector2( -300, 120 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 2, 3, 0, 4, 0, 8, 0, 9, 0, 14, 0, 15, 0, 9, 0, 14, 0, 16, 0, 14, 2, 14, 1, 15, 1, 9, 1, 14, 1, 4, 0, 23, 0, 15, 0, 5, 0, 5, 0, 26, 0, 27, 0, 26, 1, 28, 0, 5, 1, 26, 0, 23, 1, 23, 0, 0, 0, 29, 0, 4, 1 )
