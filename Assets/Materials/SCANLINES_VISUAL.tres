[gd_resource type="VisualShader" load_steps=9 format=2]

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "screen_texture"

[sub_resource type="VisualShaderNodeInput" id=13]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeTexture" id=14]
source = 5

[sub_resource type="VisualShaderNodeVectorDecompose" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 0.1 ]

[sub_resource type="VisualShaderNodeScalarOp" id=24]
default_input_values = [ 0, 0.0, 1, -0.01 ]

[sub_resource type="VisualShaderNodeVectorCompose" id=25]

[sub_resource type="VisualShaderNodeExpression" id=26]
size = Vector2( 250, 150 )

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(SCREEN_UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out3p0.x;
	float n_out5p1 = n_out3p0.y;
	float n_out5p2 = n_out3p0.z;

// ScalarOp:6
	float n_out6p0 = n_out5p0 + n_out5p1;

// ScalarOp:7
	float n_in7p1 = -0.01000;
	float n_out7p0 = n_out5p1 + n_in7p1;

// VectorCompose:8
	vec3 n_out8p0 = vec3(n_out6p0, n_out7p0, n_out5p2);

// Input:2

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	{
		vec4 SCREEN_TEXTURE_tex_read = texture(SCREEN_TEXTURE, n_out8p0.xy);
		n_out4p0 = SCREEN_TEXTURE_tex_read.rgb;
		n_out4p1 = SCREEN_TEXTURE_tex_read.a;
	}

// Output:0
	COLOR.rgb = n_out4p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -765.487, -209.386 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 560, 120 )
nodes/fragment/2/node = SubResource( 12 )
nodes/fragment/2/position = Vector2( -300, 220 )
nodes/fragment/3/node = SubResource( 13 )
nodes/fragment/3/position = Vector2( -1040, 80 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -60, 100 )
nodes/fragment/5/node = SubResource( 22 )
nodes/fragment/5/position = Vector2( -760, 20 )
nodes/fragment/6/node = SubResource( 23 )
nodes/fragment/6/position = Vector2( -500, -20 )
nodes/fragment/7/node = SubResource( 24 )
nodes/fragment/7/position = Vector2( -500, 160 )
nodes/fragment/8/node = SubResource( 25 )
nodes/fragment/8/position = Vector2( -280, 40 )
nodes/fragment/9/node = SubResource( 26 )
nodes/fragment/9/position = Vector2( -840, -200 )
nodes/fragment/9/size = Vector2( 250, 150 )
nodes/fragment/9/input_ports = "0,1,input0;"
nodes/fragment/9/output_ports = "0,1,output0;"
nodes/fragment/9/expression = ""
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 2, 4, 0, 0, 0, 3, 0, 5, 0, 5, 0, 6, 0, 5, 1, 7, 0, 6, 0, 8, 0, 7, 0, 8, 1, 5, 2, 8, 2, 8, 0, 4, 0, 5, 1, 6, 1 )
